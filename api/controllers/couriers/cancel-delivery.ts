module.exports = {


  friendlyName: 'Cancel delivery',


  description: '',


  inputs: {
    vegiOrderId: {
      type: 'string',
      description: 'The public id relating to the order in the vegi db',
      required: true
    },
    deliveryId: {
      type: 'string',
      description: 'The delivery id generated by the courier',
      required: true
    },
  },


  exits: {

  },


  fn: async function (inputs) {

    var order = await Order.findOne({deliveryId: inputs.deliveryId});

    if (!order){
      throw 'notFound';
    }

    if (order.courierId !== null && order.courierId !== undefined && order.courierId !== this.req._user.uid){
      throw 'otherCourierRegisteredToOrder';
    }
    else if(order.courierId === this.req._user.uid && order.courierConfirmed) {
      // This Courier has previously confirmed the delivery, they cannot cancel the delivery after this.
      throw 'courierAlreadyConfirmedOrder'; //NOTE: cannot be cancelled after this stage
    }

    await Order.updateOne({deliveryId: inputs.deliveryId})
        .set({
          deliveryId: null,
          courierAccepted: false,
          courierId: null,
          courierConfirmed: false,
        });

    await sails.helpers.sendFirebaseNotification.with({
      topic: 'order-' + order.id,
      title: 'Rider Cancelled! ðŸš¨',
      body: 'Your order has been cancelled by the rider. \nWe will find a new rider and notify you again when we do. \n\nAlternatively open vegi to manage to your order.'
    });

    // All done.
    return;

  }


};
