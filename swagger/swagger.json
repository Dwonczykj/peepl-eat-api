{
  "openapi": "3.0.0",
  "info": {
    "title": "Vegi Backend",
    "description": "This is a generated swagger json for the Vegi backend API.",
    "contact": {
      "name": "Adam Galloway",
      "url": "http://github.com/theadamgalloway",
      "email": "adam@itsaboutpeepl.com"
    },
    "version": "1.0.0",
    "termsOfService": "http://example.com/terms",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "View dashboard"
    },
    {
      "name": "View vendors"
    },
    {
      "name": "View login"
    },
    {
      "name": "View login with password"
    },
    {
      "name": "View signup"
    },
    {
      "name": "Registration"
    },
    {
      "name": "View account"
    },
    {
      "name": "Logout"
    },
    {
      "name": "View orders"
    },
    {
      "name": "View discount codes"
    },
    {
      "name": "View postal districts"
    },
    {
      "name": "View delivery partners"
    },
    {
      "name": "View category groups"
    },
    {
      "name": "View Bulk Update Data"
    },
    {
      "name": "View deliveries"
    },
    {
      "name": "View all vendors"
    },
    {
      "name": "View my orders"
    },
    {
      "name": "View create vendor"
    },
    {
      "name": "View create delivery partner"
    },
    {
      "name": "View create category group"
    },
    {
      "name": "Get all postal districts"
    },
    {
      "name": "Get fulfilment slots"
    },
    {
      "name": "view vendor product categories"
    },
    {
      "name": "Get eligible order dates"
    },
    {
      "name": "Get postal districts"
    },
    {
      "name": "Accept / Reject Delivery Confirmation"
    },
    {
      "name": "Add delivery availability to order"
    },
    {
      "name": "Cancel delivery"
    },
    {
      "name": "Create order"
    },
    {
      "name": "Get order status"
    },
    {
      "name": "Peepl pay webhook"
    },
    {
      "name": "Peepl pay Update Paid Order webhook"
    },
    {
      "name": "Peepl pay refunds webhook"
    },
    {
      "name": "Get order details"
    },
    {
      "name": "Ongoing Orders by Wallet"
    },
    {
      "name": "Logged in"
    },
    {
      "name": "Registration with email and password"
    },
    {
      "name": "Login With Firebase"
    },
    {
      "name": "Login With Secret"
    },
    {
      "name": "Login with Password"
    },
    {
      "name": "Check user for email"
    },
    {
      "name": "Check user for phone"
    },
    {
      "name": "Update User Vendor Role"
    },
    {
      "name": "Deregister User Vendor Role"
    },
    {
      "name": "Customer cancel order"
    },
    {
      "name": "Customer update paid order"
    },
    {
      "name": "Customer received order"
    },
    {
      "name": "Create vendor"
    },
    {
      "name": "Edit vendor"
    },
    {
      "name": "Create delivery partner"
    },
    {
      "name": "Edit delivery partner"
    },
    {
      "name": "Edit product"
    },
    {
      "name": "Create product"
    },
    {
      "name": "Discontinue product"
    },
    {
      "name": "Create product option"
    },
    {
      "name": "Edit product option"
    },
    {
      "name": "Create product category"
    },
    {
      "name": "Edit product category"
    },
    {
      "name": "Create category group"
    },
    {
      "name": "Edit category group"
    },
    {
      "name": "Create product option value"
    },
    {
      "name": "Edit product option value"
    },
    {
      "name": "Update product statuses"
    },
    {
      "name": "Create discount"
    },
    {
      "name": "Edit discount"
    },
    {
      "name": "Update Fulfilment Method"
    },
    {
      "name": "Approve or decline order"
    },
    {
      "name": "Create postal district"
    },
    {
      "name": "Edit postal district"
    },
    {
      "name": "Edit vendor postal districts"
    },
    {
      "name": "Get product options"
    },
    {
      "name": "Check discount code"
    },
    {
      "name": "Is user inventory manager"
    },
    {
      "name": "Is user sales manager"
    },
    {
      "name": "View vendor menu [DEPRECATED]"
    },
    {
      "name": "View edit vendor"
    },
    {
      "name": "View approve order"
    },
    {
      "name": "View order"
    },
    {
      "name": "View edit delivery partner"
    },
    {
      "name": "View edit category group"
    }
  ],
  "components": {
    "schemas": {
      "address": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/address-without-required-constraint"
          },
          {
            "required": [
              "addressLineOne",
              "addressTownCity",
              "addressPostCode"
            ]
          }
        ]
      },
      "address-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Address**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "label": {
            "type": "string",
            "default": "",
            "description": "The name/label of the address."
          },
          "addressLineOne": {
            "type": "string"
          },
          "addressLineTwo": {
            "type": "string",
            "default": ""
          },
          "addressTownCity": {
            "type": "string"
          },
          "addressPostCode": {
            "type": "string",
            "pattern": "^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})$/"
          },
          "addressCountryCode": {
            "type": "string",
            "default": "UK",
            "example": "UK"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          },
          "user": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "categorygroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/categorygroup-without-required-constraint"
          },
          {
            "required": [
              "name",
              "forRestaurantItem"
            ]
          }
        ]
      },
      "categorygroup-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **CategoryGroup**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the cross vendor category group.",
            "maxLength": 50,
            "uniqueItems": true
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the cross vendor category group image."
          },
          "forRestaurantItem": {
            "type": "boolean",
            "description": "Group of products only contains restaurant prepared items (takeaway, order-in and delivery)"
          }
        }
      },
      "deliverypartner": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/deliverypartner-without-required-constraint"
          },
          {
            "required": [
              "name",
              "email",
              "phoneNumber",
              "walletAddress",
              "imageUrl"
            ]
          }
        ]
      },
      "deliverypartner-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DeliveryPartner**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the Delivery Partner.",
            "maxLength": 50,
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the Delivery Partner.",
            "maxLength": 50
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the Delivery Partner.",
            "maxLength": 20
          },
          "type": {
            "type": "string",
            "default": "bike",
            "description": "The type of delivery partner.",
            "enum": [
              "bike",
              "electric"
            ],
            "example": "bike"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the delivery partner.",
            "maxLength": 200
          },
          "walletAddress": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "description": "The blockchain wallet address for the delivery partner. Used to distribute payments from vendors."
          },
          "imageUrl": {
            "type": "string",
            "description": "A description of where the featured image file can be found"
          },
          "status": {
            "type": "string",
            "default": "inactive",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          },
          "deliversToPostCodes": {
            "type": "array",
            "items": {},
            "default": [],
            "example": []
          },
          "rating": {
            "type": "integer",
            "format": "int64",
            "default": 5,
            "maximum": 5,
            "minimum": 0,
            "example": 5
          },
          "deliveryFulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "discount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/discount-without-required-constraint"
          },
          {
            "required": [
              "code",
              "percentage"
            ]
          }
        ]
      },
      "discount-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Discount**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string",
            "maxLength": 30,
            "minLength": 3,
            "uniqueItems": true
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "maximum": 100,
            "minimum": 0
          },
          "expiryDateTime": {
            "type": "number",
            "format": "double"
          },
          "timesUsed": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "maxUses": {
            "type": "number",
            "format": "double"
          },
          "isEnabled": {
            "type": "boolean",
            "default": false
          },
          "vendor": {
            "description": "Optional vendor for this discount JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          }
        }
      },
      "fulfilmentmethod": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/fulfilmentmethod-without-required-constraint"
          }
        ]
      },
      "fulfilmentmethod-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FulfilmentMethod**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the delivery method."
          },
          "description": {
            "type": "string",
            "description": "A brief description of the shipping method."
          },
          "priceModifier": {
            "type": "number",
            "format": "double",
            "description": "A positive or negative integer representing the amount of pence to adjust the base price by."
          },
          "methodType": {
            "type": "string",
            "default": "delivery",
            "enum": [
              "delivery",
              "collection"
            ],
            "example": "delivery"
          },
          "slotLength": {
            "type": "number",
            "format": "double",
            "default": 60,
            "description": "Slot length in minutes",
            "maximum": 1440,
            "minimum": 30,
            "example": 60
          },
          "bufferLength": {
            "type": "number",
            "format": "double",
            "description": "The required buffer time before booking a slot.",
            "minimum": 0
          },
          "orderCutoff": {
            "description": "The time after which no new bookings can be made."
          },
          "maxOrders": {
            "type": "number",
            "format": "double",
            "description": "The maximum number of orders allowed per slot."
          },
          "maxDeliveryDistance": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Max Distance (by road) in KILOMETERS that a FulfilmentMethod will fulfill"
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          },
          "openingHours": {
            "description": "Array of **openinghours**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/openinghours"
            }
          },
          "fulfilmentOrigin": {
            "description": "Origin Address for deliveries that can be used by vendors to determine delivery distances, particularly if delivery not from store address. JSON dictionary representing the **address** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ]
          }
        }
      },
      "notification": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/notification-without-required-constraint"
          },
          {
            "required": [
              "recipient",
              "sentAt"
            ]
          }
        ]
      },
      "notification-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Notification**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "recipient": {
            "type": "string",
            "description": "The number, email or firebase topicid of the recipient"
          },
          "type": {
            "type": "string",
            "description": "The URL of the vendor category image.",
            "enum": [
              "sms",
              "email",
              "push"
            ]
          },
          "sentAt": {
            "type": "number",
            "format": "double",
            "description": "The unixtime when the notification was sent."
          },
          "publicId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {},
            "default": {},
            "example": {}
          },
          "order": {
            "description": "the linked order if there was an order linked to this notification (nullable) JSON dictionary representing the **order** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/order"
              }
            ]
          }
        }
      },
      "openinghours": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/openinghours-without-required-constraint"
          }
        ]
      },
      "openinghours-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **OpeningHours**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ]
          },
          "specialDate": {
            "type": "string",
            "format": "date",
            "description": "Specific date override - for example Christmas day"
          },
          "openTime": {},
          "closeTime": {},
          "timezone": {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "maximum": 12,
            "minimum": -12
          },
          "isOpen": {
            "type": "boolean",
            "default": false
          },
          "logicId": {
            "type": "string"
          },
          "fulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          }
        }
      },
      "order": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/order-without-required-constraint"
          },
          {
            "required": [
              "total",
              "orderedDateTime",
              "deliveryName",
              "deliveryEmail",
              "deliveryPhoneNumber",
              "deliveryAddressLineOne",
              "deliveryAddressPostCode",
              "customerWalletAddress",
              "fulfilmentMethod",
              "vendor"
            ]
          }
        ]
      },
      "order-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Order**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "description": "The subtotal of the order."
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The order total in pence."
          },
          "orderedDateTime": {
            "type": "number",
            "format": "double",
            "description": "The unixtime when the order was placed."
          },
          "paidDateTime": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "The unixtime when the order payment was paid (if at all)."
          },
          "refundDateTime": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "The unixtime when the order payment was refunded (if at all)."
          },
          "deliveryName": {
            "type": "string",
            "description": "The name for the delivery."
          },
          "deliveryEmail": {
            "type": "string",
            "format": "email",
            "description": "The email for the delivery."
          },
          "deliveryPhoneNumber": {
            "type": "string",
            "description": "The phone number for the delivery."
          },
          "deliveryAddressLineOne": {
            "type": "string",
            "description": "The first line of the delivery address."
          },
          "deliveryAddressLineTwo": {
            "type": "string",
            "description": "The second line of the delivery address."
          },
          "deliveryAddressCity": {
            "type": "string",
            "description": "The city of the delivery address."
          },
          "deliveryAddressPostCode": {
            "type": "string",
            "pattern": "^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})$/",
            "description": "The post code of the delivery address."
          },
          "deliveryAddressInstructions": {
            "type": "string",
            "description": "Details about how/where to deliver the order.",
            "maxLength": 200
          },
          "deliveryAddressLatitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deliveryAddressLongitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "customerWalletAddress": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "description": "The wallet address of the customer."
          },
          "paymentStatus": {
            "type": "string",
            "default": "unpaid",
            "enum": [
              "unpaid",
              "paid",
              "failed"
            ],
            "example": "unpaid"
          },
          "paymentIntentId": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string",
            "description": "The ID to identify the delivery in the logistics system"
          },
          "deliveryPartnerAccepted": {
            "type": "boolean",
            "default": false
          },
          "deliveryPartnerConfirmed": {
            "type": "boolean",
            "default": false
          },
          "fulfilmentSlotFrom": {
            "type": "string",
            "format": "date-time",
            "description": "The beginning of the estimated fulfilment slot."
          },
          "fulfilmentSlotTo": {
            "type": "string",
            "format": "date-time",
            "description": "The end of the estimated fulfilment slot."
          },
          "publicId": {
            "type": "string"
          },
          "tipAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of tip in pence",
            "minimum": 0
          },
          "restaurantAcceptanceStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "accepted",
              "rejected",
              "partially fulfilled"
            ],
            "example": "pending"
          },
          "rewardsIssued": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "sentToDeliveryPartner": {
            "type": "boolean",
            "default": false
          },
          "completedFlag": {
            "type": "string",
            "default": "",
            "enum": [
              "",
              "completed",
              "cancelled",
              "refunded",
              "partially refunded",
              "void"
            ]
          },
          "completedOrderFeedback": {
            "type": "string",
            "nullable": true
          },
          "deliveryPunctuality": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "maximum": 5,
            "minimum": 0
          },
          "orderCondition": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "maximum": 5,
            "minimum": 0
          },
          "fulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "discount": {
            "description": "JSON dictionary representing the **discount** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ]
          },
          "items": {
            "description": "Array of **orderitem**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderitem"
            }
          },
          "unfulfilledItems": {
            "description": "Array of **orderitem**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderitem"
            }
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          },
          "parentOrder": {
            "description": "JSON dictionary representing the **order** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/order"
              }
            ]
          }
        }
      },
      "orderitem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/orderitem-without-required-constraint"
          },
          {
            "required": [
              "order",
              "product"
            ]
          }
        ]
      },
      "orderitem-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **OrderItem**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "unfulfilled": {
            "type": "boolean",
            "default": false,
            "description": "flag to show that item was unfulfilled from an order"
          },
          "unfulfilledOnOrderId": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Used to track the original order internal id of the parent order when an item is flagged as unfulfilled on an order, it is not removed from the order, it is just flagged as unfulfilled for tracking purposes."
          },
          "order": {
            "description": "The order to which the item belongs JSON dictionary representing the **order** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/order"
              }
            ]
          },
          "product": {
            "description": "The product which has been ordered. JSON dictionary representing the **product** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/product"
              }
            ]
          },
          "optionValues": {
            "description": "Array of **orderitemoptionvalue**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderitemoptionvalue"
            }
          }
        }
      },
      "orderitemoptionvalue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/orderitemoptionvalue-without-required-constraint"
          },
          {
            "required": [
              "option",
              "optionValue"
            ]
          }
        ]
      },
      "orderitemoptionvalue-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **OrderItemOptionValue**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "option": {
            "description": "JSON dictionary representing the **productoption** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productoption"
              }
            ]
          },
          "optionValue": {
            "description": "JSON dictionary representing the **productoptionvalue** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productoptionvalue"
              }
            ]
          },
          "orderItem": {
            "description": "JSON dictionary representing the **orderitem** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/orderitem"
              }
            ]
          }
        }
      },
      "postaldistrict": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/postaldistrict-without-required-constraint"
          },
          {
            "required": [
              "outcode"
            ]
          }
        ]
      },
      "postaldistrict-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PostalDistrict**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "outcode": {
            "type": "string",
            "description": "The outcode for any post codes within this district.",
            "example": "L1",
            "uniqueItems": true
          },
          "vendors": {
            "description": "Array of **vendor**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor"
            }
          }
        }
      },
      "product": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/product-without-required-constraint"
          },
          {
            "required": [
              "name",
              "basePrice",
              "vendor"
            ]
          }
        ]
      },
      "product-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Product**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "description": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string",
            "maxLength": 300
          },
          "basePrice": {
            "type": "number",
            "format": "double",
            "description": "Base product price in pence. This can be modified by product options or delivery methods."
          },
          "imageUrl": {
            "type": "string"
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Boolean to represent whether the product is available or not."
          },
          "priority": {
            "type": "number",
            "format": "double",
            "description": "Temporary way to store priority of products"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Boolean to represent whether the product is featured or not."
          },
          "status": {
            "type": "string",
            "default": "inactive",
            "description": "string active|inactive to represent whether product is discontinued or not",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          },
          "vendor": {
            "description": "The seller of the product. JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "options": {
            "description": "A collection of options that apply to the product (i.e. colour). Array of **productoption**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productoption"
            }
          },
          "category": {
            "description": "The category of the product. JSON dictionary representing the **productcategory** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productcategory"
              }
            ]
          }
        }
      },
      "productcategory": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/productcategory-without-required-constraint"
          },
          {
            "required": [
              "name",
              "vendor",
              "categoryGroup"
            ]
          }
        ]
      },
      "productcategory-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProductCategory**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the product category."
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the product category image."
          },
          "vendor": {
            "description": "The category owner. JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "categoryGroup": {
            "description": "The category group shared between vendors. JSON dictionary representing the **categorygroup** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/categorygroup"
              }
            ]
          },
          "products": {
            "description": "Array of **product**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          }
        }
      },
      "productoption": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/productoption-without-required-constraint"
          },
          {
            "required": [
              "product"
            ]
          }
        ]
      },
      "productoption-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProductOption**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "Name of the product options, for example \"colour\"."
          },
          "isRequired": {
            "type": "boolean",
            "default": false,
            "description": "Whether or not this option is required."
          },
          "product": {
            "description": "The product for which the option applies. JSON dictionary representing the **product** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/product"
              }
            ]
          },
          "values": {
            "description": "The values that can be chosen for this option (i.e. blue, green) Array of **productoptionvalue**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productoptionvalue"
            }
          }
        }
      },
      "productoptionvalue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/productoptionvalue-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "productoptionvalue-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProductOptionValue**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the option value (e.g. Blue)"
          },
          "description": {
            "type": "string",
            "description": "The description of the option value (e.g. This is a great sky blue shade!)"
          },
          "priceModifier": {
            "type": "number",
            "format": "double",
            "description": "The amount of pence to add or subtract from the product total for this option."
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Represents whether or not the option value is available."
          },
          "option": {
            "description": "The option to which this value can apply. JSON dictionary representing the **productoption** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productoption"
              }
            ]
          }
        }
      },
      "refund": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/refund-without-required-constraint"
          },
          {
            "required": [
              "paymentIntentId",
              "currency",
              "amount",
              "requestedAt",
              "recipientWalletAddress"
            ]
          }
        ]
      },
      "refund-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Refund**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "paymentIntentId": {
            "type": "string",
            "description": "The paymentIntentId of the ORIGINAL payment"
          },
          "currency": {
            "type": "string",
            "description": "The UPPERCASE asset or numeraire used in the trade to buy the order items from the seller"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "requestedAt": {
            "type": "number",
            "format": "double",
            "description": "The unixtime when the refund was requested."
          },
          "refundStatus": {
            "type": "string",
            "default": "unpaid",
            "enum": [
              "unpaid",
              "paid",
              "failed"
            ],
            "example": "unpaid"
          },
          "recipientWalletAddress": {
            "type": "string"
          },
          "order": {
            "description": "the linked order if there was an order linked to this notification (nullable) JSON dictionary representing the **order** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/order"
              }
            ]
          }
        }
      },
      "user": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user-without-required-constraint"
          },
          {
            "required": [
              "email",
              "phoneNoCountry",
              "phoneCountryCode",
              "name",
              "role"
            ]
          }
        ]
      },
      "user-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **User**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "email": {
            "type": "string",
            "format": "email",
            "uniqueItems": true
          },
          "phoneNoCountry": {
            "type": "number",
            "format": "double"
          },
          "phoneCountryCode": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "isSuperAdmin": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "vendor",
              "deliveryPartner",
              "consumer"
            ]
          },
          "vendorRole": {
            "type": "string",
            "default": "none",
            "enum": [
              "admin",
              "owner",
              "inventoryManager",
              "salesManager",
              "none"
            ],
            "example": "none"
          },
          "deliveryPartnerRole": {
            "type": "string",
            "default": "none",
            "enum": [
              "admin",
              "owner",
              "deliveryManager",
              "rider",
              "none"
            ],
            "example": "none"
          },
          "roleConfirmedWithOwner": {
            "type": "boolean",
            "default": false
          },
          "vendorConfirmed": {
            "type": "boolean",
            "default": false
          },
          "fbUid": {
            "type": "string"
          },
          "firebaseSessionToken": {
            "type": "string",
            "nullable": true,
            "default": ""
          },
          "secret": {
            "type": "string",
            "nullable": true,
            "description": "Securely hashed representation of the service account's secret.",
            "example": "2$28a8eabna301089103-13948134nad"
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          }
        }
      },
      "vendor": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/vendor-without-required-constraint"
          },
          {
            "required": [
              "name",
              "walletAddress",
              "imageUrl",
              "phoneNumber"
            ]
          }
        ]
      },
      "vendor-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Vendor**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the vendor.",
            "maxLength": 50
          },
          "type": {
            "type": "string",
            "default": "restaurant",
            "description": "The type of vendor.",
            "maxLength": 50,
            "enum": [
              "restaurant",
              "shop"
            ],
            "example": "restaurant"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the vendor.",
            "maxLength": 200
          },
          "walletAddress": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "description": "The blockchain wallet address for the vendor. Used to distribute payments from customers."
          },
          "imageUrl": {
            "type": "string",
            "description": "A description of where the featured image file can be found"
          },
          "status": {
            "type": "string",
            "default": "inactive",
            "enum": [
              "active",
              "draft",
              "inactive"
            ],
            "example": "inactive"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the restaurant."
          },
          "costLevel": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "maximum": 3,
            "minimum": 1
          },
          "rating": {
            "type": "integer",
            "format": "int64",
            "maximum": 5,
            "minimum": 0
          },
          "isVegan": {
            "type": "boolean",
            "default": false
          },
          "minimumOrderAmount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "platformFee": {
            "type": "number",
            "format": "double",
            "default": 125,
            "description": "The platform fee (in pence) that is charged for this vendor.",
            "minimum": 0,
            "example": 125
          },
          "products": {
            "description": "Array of **product**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "collectionFulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "deliveryFulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "pickupAddress": {
            "description": "JSON dictionary representing the **address** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          },
          "vendorCategories": {
            "description": "Array of **vendorcategory**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendorcategory"
            }
          },
          "productCategories": {
            "description": "Array of **productcategory**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productcategory"
            }
          },
          "fulfilmentPostalDistricts": {
            "description": "Array of **postaldistrict**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/postaldistrict"
            }
          },
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "vendorcategory": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/vendorcategory-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "vendorcategory-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **VendorCategory**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the vendor category (i.e. a cafe)."
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the vendor category image."
          },
          "vendors": {
            "description": "Array of **vendor**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor"
            }
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/home": {
      "get": {
        "summary": "View dashboard",
        "description": "Display Dashboard page.",
        "tags": [
          "View dashboard"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "summary": "View vendors",
        "description": "Display \"Vendors\" page.",
        "tags": [
          "View vendors"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/login": {
      "get": {
        "summary": "View login",
        "description": "Display \"Login\" page.",
        "tags": [
          "View login"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/login-with-password": {
      "get": {
        "summary": "View login with password",
        "description": "Display \"Login\" page.",
        "tags": [
          "View login with password"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/signup": {
      "get": {
        "summary": "View signup",
        "description": "Display \"Signup\" page.",
        "tags": [
          "View signup"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Registration",
        "description": "Registration administration.",
        "tags": [
          "Registration"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "emailAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "phoneNoCountry",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "phoneCountryCode",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorRole",
            "required": false,
            "schema": {
              "type": "string",
              "default": "none",
              "example": "none"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerRole",
            "required": false,
            "schema": {
              "type": "string",
              "default": "none",
              "example": "none"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "A user is already registered to the phone number requested"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Register request passed with string roles that do not exist on the roles/vendorRoles/deliveryPartnerRoles of a User"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/account": {
      "get": {
        "summary": "View account",
        "description": "Display \"Account Details\" page.",
        "tags": [
          "View account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/logout": {
      "get": {
        "summary": "Logout",
        "description": "Logout admin.",
        "tags": [
          "Logout"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/vendors": {
      "get": {
        "summary": "View vendors",
        "description": "Display \"Vendors\" page.",
        "tags": [
          "View vendors"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "summary": "View orders",
        "description": "Display \"orders\" page.",
        "tags": [
          "View orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "acceptanceStatus",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "accepted",
                "rejected",
                "pending"
              ]
            },
            "description": "The acceptance status of the order"
          },
          {
            "in": "query",
            "name": "timePeriod",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "upcoming",
                "past",
                "all"
              ]
            },
            "description": "The time period of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/discount-codes": {
      "get": {
        "summary": "View discount codes",
        "description": "Display \"Discount codes\" page.",
        "tags": [
          "View discount codes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/postal-districts": {
      "get": {
        "summary": "View postal districts",
        "description": "Display \"Postal districts\" page.",
        "tags": [
          "View postal districts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/delivery-partners": {
      "get": {
        "summary": "View delivery partners",
        "description": "Display \"Delivery partners\" page.",
        "tags": [
          "View delivery partners"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/category-groups": {
      "get": {
        "summary": "View category groups",
        "description": "Display \"Category Groups\" page.",
        "tags": [
          "View category groups"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/bulk-update-data": {
      "get": {
        "summary": "View Bulk Update Data",
        "tags": [
          "View Bulk Update Data"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/couriers/deliveries": {
      "all": {
        "summary": "View deliveries",
        "description": "Display \"DeliveryPartner Deliveries\" page.",
        "tags": [
          "View deliveries"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "summary": "View all vendors",
        "description": "Display \"All vendors\" page.",
        "tags": [
          "View all vendors"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "outcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "summary": "View my orders",
        "description": "Display \"My orders\" page.",
        "tags": [
          "View my orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "walletId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/vendors/new": {
      "get": {
        "summary": "View create vendor",
        "description": "Display \"Create vendor\" page.",
        "tags": [
          "View create vendor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/delivery-partners/new": {
      "get": {
        "summary": "View create delivery partner",
        "description": "Display \"Create delivery partner\" page.",
        "tags": [
          "View create delivery partner"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/category-groups/new": {
      "get": {
        "summary": "View create category group",
        "description": "Display \"Create category group\" page.",
        "tags": [
          "View create category group"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/postal-districts/get-all-postal-districts": {
      "get": {
        "summary": "Get all postal districts",
        "tags": [
          "Get all postal districts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/get-fulfilment-slots": {
      "get": {
        "summary": "Get fulfilment slots",
        "tags": [
          "Get fulfilment slots"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            }
          },
          {
            "in": "query",
            "name": "methodType",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "enum": [
                "delivery",
                "collection",
                ""
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/vendors/product-categories": {
      "get": {
        "summary": "view vendor product categories",
        "tags": [
          "view vendor product categories"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "vendor not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/get-next-fulfilment-slot": {
      "get": {
        "summary": "Get fulfilment slots",
        "tags": [
          "Get fulfilment slots"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/vendors/get-eligible-order-dates": {
      "get": {
        "summary": "Get eligible order dates",
        "description": "Get eligible order dates",
        "tags": [
          "Get eligible order dates"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartner",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "BadRequest as deliveryPartner input doesnt match the deliveryPartner assigned to the vendor."
          },
          "404": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/get-postal-districts": {
      "get": {
        "summary": "Get postal districts",
        "tags": [
          "Get postal districts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the vendor."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/couriers/accept-reject-delivery-confirmation": {
      "post": {
        "summary": "Accept / Reject Delivery Confirmation",
        "tags": [
          "Accept / Reject Delivery Confirmation"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deliveryId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The delivery id generated by the deliveryPartner"
          },
          {
            "in": "query",
            "name": "deliveryPartnerConfirmed",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "401": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Forbidden"
                    },
                    {
                      "type": "string",
                      "description": "DeliveryPartner has already confirmed this order."
                    },
                    {
                      "type": "string",
                      "description": "Order is registered to another deliveryPartner!"
                    },
                    {
                      "type": "string",
                      "description": "No delivery partner is registered for this user!"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No order found for deliveryPartner delivery id"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/couriers/add-delivery-availability-for-order": {
      "post": {
        "summary": "Add delivery availability to order",
        "description": "For deliveryPartners to verify that they have riders available to service an order before the order has been sent to the vendor to be confirmed.",
        "tags": [
          "Add delivery availability to order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vegiOrderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Public id relating to the order in the vegi db"
          },
          {
            "in": "query",
            "name": "deliveryId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The delivery id generated by the deliveryPartner to be added here so that it can be added to the order for tracking."
          },
          {
            "in": "query",
            "name": "deliveryPartnerAccepted",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "A deliveryPartner has already accepted this order"
                    },
                    {
                      "type": "string",
                      "description": "A deliveryPartner has already accepted this order"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "DeliveryPartner does not have a slot to service this order"
                    },
                    {
                      "type": "string",
                      "description": "No order found for order id"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/couriers/cancel-delivery": {
      "post": {
        "summary": "Cancel delivery",
        "tags": [
          "Cancel delivery"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vegiOrderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The public id relating to the order in the vegi db"
          },
          {
            "in": "query",
            "name": "deliveryId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The delivery id generated by the deliveryPartner"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/create-order": {
      "post": {
        "summary": "Create order",
        "description": "This action is responsible for the creation of new orders.",
        "tags": [
          "Create order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "items",
            "required": true,
            "schema": {},
            "description": "Cart items from the frontend, which include the product id and corresponding options."
          },
          {
            "in": "query",
            "name": "address",
            "required": true,
            "schema": {},
            "description": "The user's address."
          },
          {
            "in": "query",
            "name": "total",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The total order value, including shipping."
          },
          {
            "in": "query",
            "name": "marketingOptIn",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "discountCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "fulfilmentMethod",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "fulfilmentSlotFrom",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Delivery after this time if delivery, collection from vendor after this time if collection"
          },
          {
            "in": "query",
            "name": "fulfilmentSlotTo",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Delivery before this time if delivery, collection from vendor before this time if collection"
          },
          {
            "in": "query",
            "name": "tipAmount",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "The minimum order amount was not met."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Bad request"
                    },
                    {
                      "type": "string",
                      "description": "Server error"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "The fulfilment slot is invalid."
                    },
                    {
                      "type": "string",
                      "description": "No deliveryPartner available."
                    },
                    {
                      "type": "string",
                      "description": "All items are unavailable from merchant."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/get-order-status": {
      "get": {
        "summary": "Get order status",
        "tags": [
          "Get order status"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "ID of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Not found"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/peepl-pay-webhook": {
      "post": {
        "summary": "Peepl pay webhook",
        "tags": [
          "Peepl pay webhook"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "publicId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "the paymentIntentId as this is the publicId that the peeplPay api keeps"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/peepl-pay-update-paid-order-webhook": {
      "post": {
        "summary": "Peepl pay Update Paid Order webhook",
        "tags": [
          "Peepl pay Update Paid Order webhook"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "publicId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "the paymentIntentId as this is the publicId that the peeplPay api keeps"
          },
          {
            "in": "query",
            "name": "metadata",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Success"
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/peepl-pay-refund-webhook": {
      "post": {
        "summary": "Peepl pay refunds webhook",
        "tags": [
          "Peepl pay refunds webhook"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "publicId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "the paymentIntentId as this is the publicId that the peeplPay api keeps"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/get-order-details": {
      "get": {
        "summary": "Get order details",
        "tags": [
          "Get order details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/ongoing-orders-by-wallet": {
      "get": {
        "summary": "Ongoing Orders by Wallet",
        "description": "Fetch all ongoing orders from a wallet address",
        "tags": [
          "Ongoing Orders by Wallet"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/admin/login": {
      "get": {
        "summary": "View login",
        "description": "Display \"Login\" page.",
        "tags": [
          "View login"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/logged-in": {
      "get": {
        "summary": "Logged in",
        "description": "Logged in",
        "tags": [
          "Logged in"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/signup": {
      "get": {
        "summary": "View signup",
        "description": "Display \"Signup\" page.",
        "tags": [
          "View signup"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Registration",
        "description": "Registration administration.",
        "tags": [
          "Registration"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "emailAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "phoneNoCountry",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "phoneCountryCode",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorRole",
            "required": false,
            "schema": {
              "type": "string",
              "default": "none",
              "example": "none"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerRole",
            "required": false,
            "schema": {
              "type": "string",
              "default": "none",
              "example": "none"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "A user is already registered to the phone number requested"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Register request passed with string roles that do not exist on the roles/vendorRoles/deliveryPartnerRoles of a User"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/signup-with-password": {
      "post": {
        "summary": "Registration with email and password",
        "description": "Registration administration.",
        "tags": [
          "Registration with email and password"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "emailAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phoneNoCountry",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "phoneCountryCode",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorRole",
            "required": false,
            "schema": {
              "type": "string",
              "default": "none",
              "example": "none"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerRole",
            "required": false,
            "schema": {
              "type": "string",
              "default": "none",
              "example": "none"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "A user is already registered to the details requested"
                    },
                    {
                      "type": "string",
                      "description": "A firebase user is already registered to the phonenumber requested and should be signed in"
                    },
                    {
                      "type": "string",
                      "description": "A firebase user is already registered to the email requested and should be signed in"
                    },
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Server error"
          },
          "401": {
            "description": "firebase errored on verifying the user token"
          },
          "403": {
            "description": "Register request passed with string roles that do not exist on the roles/vendorRoles/deliveryPartnerRoles of a User"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/login-with-firebase": {
      "post": {
        "summary": "Login With Firebase",
        "description": "Firebase Login admin.",
        "tags": [
          "Login With Firebase"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "phoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "firebaseSessionToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "rememberMe",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to extend the lifetime of the user's session."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "firebase errored on verifying the user token"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/admin/login-with-secret": {
      "post": {
        "summary": "Login With Secret",
        "description": "Endpoint for service accounts and tests to login to without requiring firebase",
        "tags": [
          "Login With Secret"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "secret",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "The provided service name and secret combination does not\n      match any service account."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/login-with-password": {
      "post": {
        "summary": "Login with Password",
        "description": "Login admin.",
        "tags": [
          "Login with Password"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "emailAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "firebaseSessionToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "rememberMe",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to extend the lifetime of the user's session."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "sails backend errored"
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "firebase errored on verifying the user token"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/user-exists-for-email": {
      "post": {
        "summary": "Check user for email",
        "description": "Check whether a user exists for a email",
        "tags": [
          "Check user for email"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": true,
                      "type": "boolean",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/admin/user-exists-for-phone": {
      "post": {
        "summary": "Check user for phone",
        "description": "Check whether a user exists for a phone number",
        "tags": [
          "Check user for phone"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "countryCodeNoFormat",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "phoneNoCountryNoFormat",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": true,
                      "type": "boolean",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/update-user": {
      "post": {
        "summary": "Update User Vendor Role",
        "description": "Update the role of the user at the vendor they are registered to",
        "tags": [
          "Update User Vendor Role"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "vendor",
                "deliveryPartner",
                "consumer"
              ]
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "vendorRole",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "owner",
                "inventoryManager",
                "salesManager",
                "deliveryPartner",
                "none"
              ]
            }
          },
          {
            "in": "query",
            "name": "vendorConfirmed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "roleConfirmedWithOwner",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "deliveryPartnerRole",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "owner",
                "deliveryManager",
                "rider",
                "none"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to have a role with this vendor."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "VendorRole passed does not exist."
          },
          "401": {
            "description": "firebase errored on verifying the user token"
          },
          "404": {
            "description": "There is no vendor with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/deregister-user": {
      "post": {
        "summary": "Deregister User Vendor Role",
        "description": "Deregister the role of the user at the vendor they are registered to",
        "tags": [
          "Deregister User Vendor Role"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to have a role with this vendor."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "User id passed does not exist."
          },
          "401": {
            "description": "firebase errored on verifying the user token"
          },
          "404": {
            "description": "There is no user with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/home/nearest-vendors": {
      "get": {
        "summary": "View dashboard",
        "description": "Display Dashboard page.",
        "tags": [
          "View dashboard"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "required": true,
            "schema": {},
            "description": "coordinate: {lat,lng} of the user"
          },
          {
            "in": "query",
            "name": "distance",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/customer-cancel-order": {
      "post": {
        "summary": "Customer cancel order",
        "description": "A handle for customers to repond to requests to cancel their order when a vendor was unable to service parts or all of an order.",
        "tags": [
          "Customer cancel order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID for the order."
          },
          {
            "in": "query",
            "name": "customerWalletAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Order has already been flagged as completed."
                    },
                    {
                      "type": "string",
                      "description": "order has not yet been paid for so no refund needs to be processed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Order not found either because publicId does not exist or because the customerWalletAddress does not agree or because the order has already been flagged as completed."
          },
          "500": {
            "description": "Internal server error"
          },
          "501": {
            "description": "the stored order doesnt have the paymentIntentId set"
          }
        }
      }
    },
    "/api/v1/admin/customer-update-paid-order": {
      "post": {
        "summary": "Customer update paid order",
        "description": "A handle for customers to repond to requests to update their order when a vendor was unable to service an entire order.",
        "tags": [
          "Customer update paid order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID for the order."
          },
          {
            "in": "query",
            "name": "customerWalletAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "retainItems",
            "required": true,
            "schema": {},
            "description": "array of internal ids for the items"
          },
          {
            "in": "query",
            "name": "removeItems",
            "required": true,
            "schema": {},
            "description": "array of internal ids for the items"
          },
          {
            "in": "query",
            "name": "refundRequestGBPx",
            "required": true,
            "schema": {},
            "description": "specification of how refund recipient would like their refund to be made from GBPx (GBP*100)"
          },
          {
            "in": "query",
            "name": "refundRequestPPL",
            "required": true,
            "schema": {},
            "description": "specification of how refund recipient would like their refund to be made from PPL"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "likely caused by no items retained in the request"
                    },
                    {
                      "type": "string",
                      "description": "Server error"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "thrown when the updated order has a larger total than the new order."
                    },
                    {
                      "type": "string",
                      "description": "Order has already been flagged as completed."
                    },
                    {
                      "type": "string",
                      "description": "order has not yet been paid for so no refund needs to be processed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Order not found either because publicId does not exist or because the customerWalletAddress does not agree or because the order has already been flagged as completed."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "501": {
            "description": "the stored order doesnt have the paymentIntentId set"
          }
        }
      }
    },
    "/api/v1/admin/customer-received-order": {
      "post": {
        "summary": "Customer received order",
        "description": "A handle for customers to confirm completion of an order",
        "tags": [
          "Customer received order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID for the order."
          },
          {
            "in": "query",
            "name": "orderReceived",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "orderCondition",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 5,
              "minimum": 0,
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "in": "query",
            "name": "deliveryPunctuality",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 5,
              "minimum": 0,
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "in": "query",
            "name": "feedback",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "likely caused by no items retained in the request"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/admin/create-vendor": {
      "post": {
        "summary": "Create vendor",
        "tags": [
          "Create vendor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "restaurant",
                "shop"
              ]
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pickupAddress",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "active",
                "inactive"
              ]
            }
          },
          {
            "in": "query",
            "name": "deliveryPartner",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "costLevel",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 3,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "rating",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 5,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "isVegan",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "minimumOrderAmount",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "No file was attached."
                    },
                    {
                      "type": "string",
                      "description": "The file is too big."
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Vendor address geocoordinates are out of bounds"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-vendor": {
      "post": {
        "summary": "Edit vendor",
        "tags": [
          "Edit vendor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddress",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "active",
                "inactive"
              ]
            }
          },
          {
            "in": "query",
            "name": "deliveryPartner",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "costLevel",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "maximum": 3,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "rating",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "maximum": 5,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "isVegan",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "minimumOrderAmount",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "No file was attached."
                    },
                    {
                      "type": "string",
                      "description": "Postal Code didnt match regex formatter in action"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to edit this vendor."
                    },
                    {
                      "type": "string",
                      "description": "The file attached is too big."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There is no vendor with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-delivery-partner": {
      "post": {
        "summary": "Create delivery partner",
        "tags": [
          "Create delivery partner"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the delivery partner"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "maxLength": 50
            },
            "description": "The email address of the delivery partner"
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 20
            },
            "description": "The phone number of the delivery partner"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "default": "inactive",
              "enum": [
                "active",
                "inactive"
              ],
              "example": "inactive"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string",
              "default": "bike",
              "enum": [
                "bike",
                "electric"
              ],
              "example": "bike"
            }
          },
          {
            "in": "query",
            "name": "rating",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 5,
              "maximum": 5,
              "minimum": 0,
              "example": 5
            }
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "New delivery partner created."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "delivery partner already exists"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-delivery-partner": {
      "post": {
        "summary": "Edit delivery partner",
        "tags": [
          "Edit delivery partner"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the delivery partner to edit"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the delivery partner"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "maxLength": 50
            },
            "description": "The email address of the delivery partner"
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 20
            },
            "description": "The phone number of the delivery partner"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "default": "inactive",
              "enum": [
                "active",
                "inactive"
              ],
              "example": "inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Delivery partner edited."
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to edit this vendor."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There is no delivery partner with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product": {
      "post": {
        "summary": "Edit product",
        "tags": [
          "Edit product"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "basePrice",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isFeatured",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "old_product_id"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "example": "old_product_id",
                      "type": "string"
                    }
                  },
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product": {
      "post": {
        "summary": "Create product",
        "tags": [
          "Create product"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "basePrice",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isFeatured",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "No file was attached."
                    },
                    {
                      "type": "string",
                      "description": "The file is too big."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/discontinue-product": {
      "post": {
        "summary": "Discontinue product",
        "description": "Voids a product item so that it still exists for future data analytics but is no longer available to be sold by a vendor.",
        "tags": [
          "Discontinue product"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "old_product_id"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "example": "old_product_id",
                      "type": "string"
                    }
                  },
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/update-user-vendor-role": {
      "post": {
        "summary": "Update User Vendor Role",
        "description": "Update the role of the user at the vendor they are registered to",
        "tags": [
          "Update User Vendor Role"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "vendorRole",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "owner",
                "inventoryManager",
                "salesManager",
                "none"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to have a role with this vendor."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "VendorRole passed does not exist."
          },
          "404": {
            "description": "There is no vendor with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product-option": {
      "post": {
        "summary": "Create product option",
        "tags": [
          "Create product option"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product-option": {
      "post": {
        "summary": "Edit product option",
        "tags": [
          "Edit product option"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product-category": {
      "post": {
        "summary": "Create product category",
        "tags": [
          "Create product category"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the product category"
          },
          {
            "in": "query",
            "name": "categoryGroup",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "New product category created."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "product category already exists"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product-category": {
      "post": {
        "summary": "Edit product category",
        "tags": [
          "Edit product category"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the product category"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the product category"
          },
          {
            "in": "query",
            "name": "categoryGroup",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "New product category created."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-category-group": {
      "post": {
        "summary": "Create category group",
        "tags": [
          "Create category group"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the group of product categories"
          },
          {
            "in": "query",
            "name": "forRestaurantItem",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "description": "Whether the category applies to product categories for restaurants or grocers"
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "New category group created."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "category group already exists"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-category-group": {
      "post": {
        "summary": "Edit category group",
        "tags": [
          "Edit category group"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the category group to edit"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the category group"
          },
          {
            "in": "query",
            "name": "forRestaurantItem",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "description": "Whether the category applies to product categories for restaurants or grocers"
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "category group edited."
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to edit this vendor."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There is no category group with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product-option-value": {
      "post": {
        "summary": "Create product option value",
        "tags": [
          "Create product option value"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "productOption",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to create product option values for this product option."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product-option-value": {
      "post": {
        "summary": "Edit product option value",
        "tags": [
          "Edit product option value"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/update-product-status": {
      "post": {
        "summary": "Update product statuses",
        "tags": [
          "Update product statuses"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "productIds",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-discount": {
      "post": {
        "summary": "Create discount",
        "tags": [
          "Create discount"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "percentage",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 100,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "expiryDateTime",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "maxUses",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-discount": {
      "post": {
        "summary": "Edit discount",
        "tags": [
          "Edit discount"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "percentage",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 100,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "expiryDateTime",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "maxUses",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/update-fulfilment-method": {
      "post": {
        "summary": "Update Fulfilment Method",
        "tags": [
          "Update Fulfilment Method"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "openingHours",
            "required": true,
            "schema": {},
            "description": "The opening hours to be added to the vendor"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the fulfilment method"
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "A positive or negative integer representing the amount of pence to adjust the base price by."
          },
          {
            "in": "query",
            "name": "slotLength",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 1440,
              "minimum": 30
            },
            "description": "Slot length in minutes"
          },
          {
            "in": "query",
            "name": "bufferLength",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "minimum": 0
            },
            "description": "The required buffer time before booking a slot."
          },
          {
            "in": "query",
            "name": "orderCutoff",
            "required": false,
            "schema": {},
            "description": "The time after which no new bookings can be made."
          },
          {
            "in": "query",
            "name": "maxOrders",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The maximum number of orders allowed per slot."
          },
          {
            "in": "query",
            "name": "maxDeliveryDistance",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "default": 0
            },
            "description": "The max delivery distance allowed by a fulfilment method by road in KM."
          },
          {
            "in": "query",
            "name": "fulfilmentOrigin",
            "required": false,
            "schema": {},
            "description": "The fulfilment origin address to calculate max distance from."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/approve-or-decline-order": {
      "post": {
        "summary": "Approve or decline order",
        "tags": [
          "Approve or decline order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID for the order."
          },
          {
            "in": "query",
            "name": "orderFulfilled",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accept",
                "reject",
                "partial"
              ]
            }
          },
          {
            "in": "query",
            "name": "retainItems",
            "required": true,
            "schema": {},
            "description": "array of publicIds for the items"
          },
          {
            "in": "query",
            "name": "removeItems",
            "required": true,
            "schema": {},
            "description": "array of publicIds for the items"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Request failed to include retainItems or removeItems arrays"
                    },
                    {
                      "type": "string",
                      "description": "the order has not been paid for."
                    },
                    {
                      "type": "string",
                      "description": "Restaurant has already accepted or rejected this order."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/admin/create-postal-district": {
      "post": {
        "summary": "Create postal district",
        "tags": [
          "Create postal district"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "outcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Postal District already exists"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-postal-district": {
      "post": {
        "summary": "Edit postal district",
        "tags": [
          "Edit postal district"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "outcode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-vendor-postal-districts": {
      "post": {
        "summary": "Edit vendor postal districts",
        "tags": [
          "Edit vendor postal districts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "districts",
            "required": true,
            "schema": {},
            "description": "The districts to be added to the vendor"
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the vendor to be edited"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/bulk-update-data": {
      "post": {
        "summary": "Edit product category",
        "tags": [
          "Edit product category"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "modelType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the product category"
          },
          {
            "in": "query",
            "name": "data",
            "required": true,
            "schema": {},
            "description": "json[] format of data to create or update"
          },
          {
            "in": "query",
            "name": "createOrUpdateMode",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "create",
                "update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "New product category created."
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/logout": {
      "all": {
        "summary": "Logout",
        "description": "Logout admin.",
        "tags": [
          "Logout"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/products/get-product-options/{productId}": {
      "get": {
        "summary": "Get product options",
        "description": "Get the options for the product as well as the relevant options.",
        "tags": [
          "Get product options"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The ID of the product that we want the options for."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/discounts/check-discount-code/{discountCode}": {
      "get": {
        "summary": "Check discount code",
        "description": "Checks the validity of the discount code and, if valid, returns the details.",
        "tags": [
          "Check discount code"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discountCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/is-user-vendor-inventory-manager/{vendorId}": {
      "get": {
        "summary": "Is user inventory manager",
        "tags": [
          "Is user inventory manager"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {
                        "isInventoryManager": false,
                        "vendorID": 0
                      },
                      "type": "object",
                      "properties": {
                        "isInventoryManager": {
                          "example": false,
                          "type": "boolean"
                        },
                        "vendorID": {
                          "example": 0,
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authenticated"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/is-user-vendor-sales-manager/{vendorId}": {
      "get": {
        "summary": "Is user sales manager",
        "tags": [
          "Is user sales manager"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {
                        "isSalesManager": false,
                        "vendorID": 0
                      },
                      "type": "object",
                      "properties": {
                        "isSalesManager": {
                          "example": false,
                          "type": "boolean"
                        },
                        "vendorID": {
                          "example": 0,
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authenticated"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/is-user-vendor-owner/{vendorId}": {
      "get": {
        "summary": "Is user inventory manager",
        "tags": [
          "Is user inventory manager"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {
                        "isOwner": false,
                        "vendorID": 0
                      },
                      "type": "object",
                      "properties": {
                        "isOwner": {
                          "example": false,
                          "type": "boolean"
                        },
                        "vendorID": {
                          "example": 0,
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authenticated"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/is-user-vendor-admin/{vendorId}": {
      "get": {
        "summary": "Is user inventory manager",
        "tags": [
          "Is user inventory manager"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {
                        "isAdmin": false,
                        "vendorID": 0
                      },
                      "type": "object",
                      "properties": {
                        "isAdmin": {
                          "example": false,
                          "type": "boolean"
                        },
                        "vendorID": {
                          "example": 0,
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authenticated"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/{vendorid}": {
      "get": {
        "summary": "View vendor menu [DEPRECATED]",
        "description": "Display \"Vendor menu\" page.",
        "tags": [
          "View vendor menu [DEPRECATED]"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorid",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/vendors/{vendorid}": {
      "get": {
        "summary": "View edit vendor",
        "description": "Display \"Edit vendor\" page.",
        "tags": [
          "View edit vendor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorid",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/approve-order/{orderId}": {
      "get": {
        "summary": "View approve order",
        "description": "Display \"Approve order\" page.",
        "tags": [
          "View approve order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The public id of the order to be approved or rejected."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/order/{orderId}": {
      "get": {
        "summary": "View order",
        "description": "Display \"order\" page.",
        "tags": [
          "View order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The public id of the order to view."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "user not allowed to see vendor or vendor orders"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/delivery-partners/{deliveryPartnerId}": {
      "get": {
        "summary": "View edit delivery partner",
        "description": "Display \"Edit delivery partner\" page.",
        "tags": [
          "View edit delivery partner"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deliveryPartnerId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/category-groups/{categoryGroupId}": {
      "get": {
        "summary": "View edit category group",
        "description": "Display \"Edit category group\" page.",
        "tags": [
          "View edit category group"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryGroupId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/": {
      "all": {
        "summary": "View dashboard",
        "description": "Display Dashboard page.",
        "tags": [
          "View dashboard"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}