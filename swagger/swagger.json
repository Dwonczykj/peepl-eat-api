{
  "openapi": "3.0.0",
  "info": {
    "title": "Vegi Backend",
    "description": "This is a generated swagger json for the Vegi backend API.",
    "contact": {
      "name": "Adam Galloway",
      "url": "http://github.com/theadamgalloway",
      "email": "adam@itsaboutpeepl.com"
    },
    "version": "1.0.0",
    "termsOfService": "http://example.com/terms",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "View vendors"
    },
    {
      "name": "View login"
    },
    {
      "name": "Login"
    },
    {
      "name": "Logout"
    },
    {
      "name": "View orders"
    },
    {
      "name": "View discount codes"
    },
    {
      "name": "View postal districts"
    },
    {
      "name": "View delivery partners"
    },
    {
      "name": "View all vendors"
    },
    {
      "name": "View my orders"
    },
    {
      "name": "View create vendor"
    },
    {
      "name": "View create delivery partner"
    },
    {
      "name": "Get all postal districts"
    },
    {
      "name": "Get fulfilment slots"
    },
    {
      "name": "Get postal districts"
    },
    {
      "name": "Create order"
    },
    {
      "name": "Get order status"
    },
    {
      "name": "Peepl pay webhook"
    },
    {
      "name": "Get order details"
    },
    {
      "name": "Create vendor"
    },
    {
      "name": "Edit vendor"
    },
    {
      "name": "Create delivery partner"
    },
    {
      "name": "Edit delivery partner"
    },
    {
      "name": "Edit product"
    },
    {
      "name": "Create product"
    },
    {
      "name": "Create product option"
    },
    {
      "name": "Edit product option"
    },
    {
      "name": "Create product option value"
    },
    {
      "name": "Edit product option value"
    },
    {
      "name": "Update product statuses"
    },
    {
      "name": "Create discount"
    },
    {
      "name": "Edit discount"
    },
    {
      "name": "Update Fulfilment Method"
    },
    {
      "name": "Approve or decline order"
    },
    {
      "name": "Create postal district"
    },
    {
      "name": "Edit postal district"
    },
    {
      "name": "Edit vendor postal districts"
    },
    {
      "name": "Get product options"
    },
    {
      "name": "Check discount code"
    },
    {
      "name": "View vendor menu [DEPRECATED]"
    },
    {
      "name": "View edit vendor"
    },
    {
      "name": "View approve order"
    },
    {
      "name": "View edit delivery partner"
    }
  ],
  "components": {
    "schemas": {
      "deliverypartner": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/deliverypartner-without-required-constraint"
          },
          {
            "required": [
              "name",
              "email",
              "phoneNumber"
            ]
          }
        ]
      },
      "deliverypartner-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DeliveryPartner**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the Delivery Partner.",
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the Delivery Partner.",
            "maxLength": 50
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the Delivery Partner.",
            "maxLength": 20
          },
          "status": {
            "type": "string",
            "default": "inactive",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          },
          "deliveryFulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          }
        }
      },
      "discount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/discount-without-required-constraint"
          },
          {
            "required": [
              "code",
              "percentage"
            ]
          }
        ]
      },
      "discount-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Discount**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "code": {
            "type": "string",
            "maxLength": 30,
            "minLength": 3,
            "uniqueItems": true
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "maximum": 100,
            "minimum": 0
          },
          "expiryDateTime": {
            "type": "number",
            "format": "double"
          },
          "timesUsed": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "maxUses": {
            "type": "number",
            "format": "double"
          },
          "isEnabled": {
            "type": "boolean",
            "default": false
          },
          "vendor": {
            "description": "Optional vendor for this discount JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          }
        }
      },
      "fulfilmentmethod": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/fulfilmentmethod-without-required-constraint"
          }
        ]
      },
      "fulfilmentmethod-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FulfilmentMethod**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the delivery method."
          },
          "description": {
            "type": "string",
            "description": "A brief description of the shipping method."
          },
          "priceModifier": {
            "type": "number",
            "format": "double",
            "description": "A positive or negative integer representing the amount of pence to adjust the base price by."
          },
          "methodType": {
            "type": "string",
            "default": "delivery",
            "enum": [
              "delivery",
              "collection"
            ],
            "example": "delivery"
          },
          "slotLength": {
            "type": "number",
            "format": "double",
            "default": 60,
            "description": "Slot length in minutes",
            "maximum": 1440,
            "minimum": 30,
            "example": 60
          },
          "bufferLength": {
            "type": "number",
            "format": "double",
            "description": "The required buffer time before booking a slot.",
            "minimum": 0
          },
          "orderCutoff": {
            "description": "The time after which no new bookings can be made."
          },
          "maxOrders": {
            "type": "number",
            "format": "double",
            "description": "The maximum number of orders allowed per slot."
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          },
          "openingHours": {
            "description": "Array of **openinghours**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/openinghours"
            }
          }
        }
      },
      "openinghours": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/openinghours-without-required-constraint"
          }
        ]
      },
      "openinghours-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **OpeningHours**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ]
          },
          "specialDate": {
            "type": "string",
            "format": "date",
            "description": "Specific date override - for example Christmas day"
          },
          "openTime": {},
          "closeTime": {},
          "isOpen": {
            "type": "boolean",
            "default": false
          },
          "fulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          }
        }
      },
      "order": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/order-without-required-constraint"
          },
          {
            "required": [
              "total",
              "orderedDateTime",
              "deliveryName",
              "deliveryEmail",
              "deliveryPhoneNumber",
              "deliveryAddressLineOne",
              "deliveryAddressPostCode",
              "customerWalletAddress",
              "fulfilmentMethod",
              "vendor"
            ]
          }
        ]
      },
      "order-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Order**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "description": "The subtotal of the order."
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The order total in pence."
          },
          "orderedDateTime": {
            "type": "number",
            "format": "double",
            "description": "The unixtime when the order was placed."
          },
          "paidDateTime": {
            "type": "number",
            "format": "double",
            "description": "The unixtime when the order payment was confirmed (if at all)."
          },
          "deliveryName": {
            "type": "string",
            "description": "The name for the delivery."
          },
          "deliveryEmail": {
            "type": "string",
            "format": "email",
            "description": "The email for the delivery."
          },
          "deliveryPhoneNumber": {
            "type": "string",
            "description": "The phone number for the delivery."
          },
          "deliveryAddressLineOne": {
            "type": "string",
            "description": "The first line of the delivery address."
          },
          "deliveryAddressLineTwo": {
            "type": "string",
            "description": "The second line of the delivery address."
          },
          "deliveryAddressPostCode": {
            "type": "string",
            "pattern": "^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})$/",
            "description": "The post code of the delivery address."
          },
          "deliveryAddressInstructions": {
            "type": "string",
            "description": "Details about how/where to deliver the order.",
            "maxLength": 200
          },
          "customerWalletAddress": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "description": "The wallet address of the customer."
          },
          "paymentStatus": {
            "type": "string",
            "default": "unpaid",
            "enum": [
              "unpaid",
              "paid",
              "failed"
            ],
            "example": "unpaid"
          },
          "paymentIntentId": {
            "type": "string"
          },
          "fulfilmentSlotFrom": {
            "type": "string",
            "format": "date-time",
            "description": "The beginning of the estimated fulfilment slot."
          },
          "fulfilmentSlotTo": {
            "type": "string",
            "format": "date-time",
            "description": "The end of the estimated fulfilment slot."
          },
          "publicId": {
            "type": "string"
          },
          "tipAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of tip in pence",
            "minimum": 0
          },
          "restaurantAcceptanceStatus": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "accepted",
              "rejected"
            ],
            "example": "pending"
          },
          "rewardsIssued": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "sentToDeliveryPartner": {
            "type": "boolean",
            "default": false
          },
          "fulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "discount": {
            "description": "JSON dictionary representing the **discount** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ]
          },
          "items": {
            "description": "Array of **orderitem**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderitem"
            }
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          }
        }
      },
      "orderitem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/orderitem-without-required-constraint"
          },
          {
            "required": [
              "order",
              "product"
            ]
          }
        ]
      },
      "orderitem-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **OrderItem**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "order": {
            "description": "The order to which the item belongs JSON dictionary representing the **order** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/order"
              }
            ]
          },
          "product": {
            "description": "The product which has been ordered. JSON dictionary representing the **product** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/product"
              }
            ]
          },
          "optionValues": {
            "description": "Array of **orderitemoptionvalue**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderitemoptionvalue"
            }
          }
        }
      },
      "orderitemoptionvalue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/orderitemoptionvalue-without-required-constraint"
          },
          {
            "required": [
              "option",
              "optionValue"
            ]
          }
        ]
      },
      "orderitemoptionvalue-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **OrderItemOptionValue**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "option": {
            "description": "JSON dictionary representing the **productoption** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productoption"
              }
            ]
          },
          "optionValue": {
            "description": "JSON dictionary representing the **productoptionvalue** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productoptionvalue"
              }
            ]
          },
          "orderItem": {
            "description": "JSON dictionary representing the **orderitem** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/orderitem"
              }
            ]
          }
        }
      },
      "postaldistrict": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/postaldistrict-without-required-constraint"
          }
        ]
      },
      "postaldistrict-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PostalDistrict**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "outcode": {
            "type": "string",
            "description": "The outcode for any post codes within this district.",
            "example": "L1"
          },
          "vendors": {
            "description": "Array of **vendor**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor"
            }
          }
        }
      },
      "product": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/product-without-required-constraint"
          },
          {
            "required": [
              "name",
              "basePrice",
              "vendor"
            ]
          }
        ]
      },
      "product-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Product**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "description": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string",
            "maxLength": 300
          },
          "basePrice": {
            "type": "number",
            "format": "double",
            "description": "Base product price in pence. This can be modified by product options or delivery methods."
          },
          "imageUrl": {
            "type": "string"
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Boolean to represent whether the product is available or not."
          },
          "priority": {
            "type": "number",
            "format": "double",
            "description": "Temporary way to store priority of products"
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Boolean to represent whether the product is featured or not."
          },
          "vendor": {
            "description": "The seller of the product. JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "options": {
            "description": "A collection of options that apply to the product (i.e. colour). Array of **productoption**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productoption"
            }
          },
          "category": {
            "description": "The category of the product. JSON dictionary representing the **productcategory** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productcategory"
              }
            ]
          }
        }
      },
      "productcategory": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/productcategory-without-required-constraint"
          },
          {
            "required": [
              "name",
              "vendor"
            ]
          }
        ]
      },
      "productcategory-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProductCategory**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the product category."
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the product category image."
          },
          "vendor": {
            "description": "The category owner. JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          },
          "products": {
            "description": "Array of **product**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          }
        }
      },
      "productoption": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/productoption-without-required-constraint"
          },
          {
            "required": [
              "product"
            ]
          }
        ]
      },
      "productoption-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProductOption**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "Name of the product options, for example \"colour\"."
          },
          "isRequired": {
            "type": "boolean",
            "default": false,
            "description": "Whether or not this option is required."
          },
          "product": {
            "description": "The product for which the option applies. JSON dictionary representing the **product** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/product"
              }
            ]
          },
          "values": {
            "description": "The values that can be chosen for this option (i.e. blue, green) Array of **productoptionvalue**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productoptionvalue"
            }
          }
        }
      },
      "productoptionvalue": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/productoptionvalue-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "productoptionvalue-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProductOptionValue**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the option value (e.g. Blue)"
          },
          "description": {
            "type": "string",
            "description": "The description of the option value (e.g. This is a great sky blue shade!)"
          },
          "priceModifier": {
            "type": "number",
            "format": "double",
            "description": "The amount of pence to add or subtract from the product total for this option."
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Represents whether or not the option value is available."
          },
          "option": {
            "description": "The option to which this value can apply. JSON dictionary representing the **productoption** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/productoption"
              }
            ]
          }
        }
      },
      "user": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user-without-required-constraint"
          },
          {
            "required": [
              "email",
              "password",
              "name"
            ]
          }
        ]
      },
      "user-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **User**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "email": {
            "type": "string",
            "format": "email",
            "uniqueItems": true
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isSuperAdmin": {
            "type": "boolean",
            "default": false
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "staff",
              "courier"
            ]
          },
          "vendor": {
            "description": "JSON dictionary representing the **vendor** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/vendor"
              }
            ]
          }
        }
      },
      "vendor": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/vendor-without-required-constraint"
          },
          {
            "required": [
              "name",
              "walletAddress",
              "imageUrl",
              "phoneNumber"
            ]
          }
        ]
      },
      "vendor-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Vendor**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the vendor.",
            "maxLength": 50
          },
          "type": {
            "type": "string",
            "default": "restaurant",
            "description": "The type of vendor.",
            "maxLength": 50,
            "enum": [
              "restaurant",
              "shop"
            ],
            "example": "restaurant"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the vendor.",
            "maxLength": 200
          },
          "walletAddress": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "description": "The blockchain wallet address for the vendor. Used to distribute payments from customers."
          },
          "imageUrl": {
            "type": "string",
            "description": "A description of where the featured image file can be found"
          },
          "status": {
            "type": "string",
            "default": "inactive",
            "enum": [
              "active",
              "draft",
              "inactive"
            ],
            "example": "inactive"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the restaurant."
          },
          "pickupAddressLineOne": {
            "type": "string",
            "nullable": true
          },
          "pickupAddressLineTwo": {
            "type": "string",
            "nullable": true
          },
          "pickupAddressCity": {
            "type": "string",
            "nullable": true
          },
          "pickupAddressPostCode": {
            "type": "string",
            "pattern": "^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})$/",
            "nullable": true
          },
          "costLevel": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "maximum": 3,
            "minimum": 1
          },
          "rating": {
            "type": "number",
            "format": "double",
            "maximum": 5,
            "minimum": 0
          },
          "isVegan": {
            "type": "boolean",
            "default": false
          },
          "minimumOrderAmount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "platformFee": {
            "type": "number",
            "format": "double",
            "default": 125,
            "description": "The platform fee (in pence) that is charged for this vendor.",
            "minimum": 0,
            "example": 125
          },
          "products": {
            "description": "Array of **product**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "collectionFulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "deliveryFulfilmentMethod": {
            "description": "JSON dictionary representing the **fulfilmentmethod** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fulfilmentmethod"
              }
            ]
          },
          "deliveryPartner": {
            "description": "JSON dictionary representing the **deliverypartner** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/deliverypartner"
              }
            ]
          },
          "vendorCategories": {
            "description": "Array of **vendorcategory**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendorcategory"
            }
          },
          "productCategories": {
            "description": "Array of **productcategory**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productcategory"
            }
          },
          "fulfilmentPostalDistricts": {
            "description": "Array of **postaldistrict**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/postaldistrict"
            }
          },
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "vendorcategory": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/vendorcategory-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "vendorcategory-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **VendorCategory**",
        "properties": {
          "createdAt": {
            "type": "number",
            "format": "double"
          },
          "updatedAt": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "description": "The name of the product category."
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the product category image."
          },
          "vendors": {
            "description": "Array of **vendor**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor"
            }
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/admin": {
      "get": {
        "summary": "View vendors",
        "description": "Display \"Vendors\" page.",
        "tags": [
          "View vendors"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/login": {
      "get": {
        "summary": "View login",
        "description": "Display \"Login\" page.",
        "tags": [
          "View login"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Login",
        "description": "Login admin.",
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "emailAddress",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "rememberMe",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/logout": {
      "get": {
        "summary": "Logout",
        "description": "Logout admin.",
        "tags": [
          "Logout"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/vendors": {
      "get": {
        "summary": "View vendors",
        "description": "Display \"Vendors\" page.",
        "tags": [
          "View vendors"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "summary": "View orders",
        "description": "Display \"orders\" page.",
        "tags": [
          "View orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "acceptanceStatus",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "accepted",
                "rejected",
                "pending"
              ]
            },
            "description": "The acceptance status of the order"
          },
          {
            "in": "query",
            "name": "timePeriod",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "upcoming",
                "past",
                "all"
              ]
            },
            "description": "The time period of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/discount-codes": {
      "get": {
        "summary": "View discount codes",
        "description": "Display \"Discount codes\" page.",
        "tags": [
          "View discount codes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/postal-districts": {
      "get": {
        "summary": "View postal districts",
        "description": "Display \"Postal districts\" page.",
        "tags": [
          "View postal districts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/delivery-partners": {
      "get": {
        "summary": "View delivery partners",
        "description": "Display \"Delivery partners\" page.",
        "tags": [
          "View delivery partners"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "summary": "View all vendors",
        "description": "Display \"All vendors\" page.",
        "tags": [
          "View all vendors"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "outcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "summary": "View my orders",
        "description": "Display \"My orders\" page.",
        "tags": [
          "View my orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "walletId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/vendors/new": {
      "get": {
        "summary": "View create vendor",
        "description": "Display \"Create vendor\" page.",
        "tags": [
          "View create vendor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/delivery-partners/new": {
      "get": {
        "summary": "View create delivery partner",
        "description": "Display \"Create delivery partner\" page.",
        "tags": [
          "View create delivery partner"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/postal-districts/get-all-postal-districts": {
      "get": {
        "summary": "Get all postal districts",
        "tags": [
          "Get all postal districts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/get-fulfilment-slots": {
      "get": {
        "summary": "Get fulfilment slots",
        "tags": [
          "Get fulfilment slots"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/get-postal-districts": {
      "get": {
        "summary": "Get postal districts",
        "tags": [
          "Get postal districts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the vendor."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/create-order": {
      "post": {
        "summary": "Create order",
        "description": "This action is responsible for the creation of new orders.",
        "tags": [
          "Create order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "items",
            "required": true,
            "schema": {},
            "description": "Cart items from the frontend, which include the product id and corresponding options."
          },
          {
            "in": "query",
            "name": "address",
            "required": true,
            "schema": {},
            "description": "The user's address."
          },
          {
            "in": "query",
            "name": "total",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The total order value, including shipping."
          },
          {
            "in": "query",
            "name": "marketingOptIn",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "discountCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "fulfilmentMethod",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "fulfilmentSlotFrom",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fulfilmentSlotTo",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tipAmount",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "The fulfilment slot is invalid."
                    },
                    {
                      "type": "string",
                      "description": "The minimum order amount was not met."
                    },
                    {
                      "type": "string",
                      "description": "Bad request"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/get-order-status": {
      "get": {
        "summary": "Get order status",
        "tags": [
          "Get order status"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "ID of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/peepl-pay-webhook": {
      "post": {
        "summary": "Peepl pay webhook",
        "tags": [
          "Peepl pay webhook"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "publicId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/orders/get-order-details": {
      "get": {
        "summary": "Get order details",
        "tags": [
          "Get order details"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-vendor": {
      "post": {
        "summary": "Create vendor",
        "tags": [
          "Create vendor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "restaurant",
                "shop"
              ]
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pickupAddressLineOne",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressLineTwo",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressCity",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressPostCode",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "active",
                "inactive"
              ]
            }
          },
          {
            "in": "query",
            "name": "deliveryPartner",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "costLevel",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 3,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "rating",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 5,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "isVegan",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "No file was attached."
                    },
                    {
                      "type": "string",
                      "description": "The file is too big."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-vendor": {
      "post": {
        "summary": "Edit vendor",
        "tags": [
          "Edit vendor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "walletAddress",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressLineOne",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressLineTwo",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressCity",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "pickupAddressPostCode",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "active",
                "inactive"
              ]
            }
          },
          {
            "in": "query",
            "name": "deliveryPartner",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "costLevel",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "maximum": 3,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "rating",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "maximum": 5,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "isVegan",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "minimumOrderAmount",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "No file was attached."
                    },
                    {
                      "type": "string",
                      "description": "Postal Code didnt match regex formatter in action"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to edit this vendor."
                    },
                    {
                      "type": "string",
                      "description": "The file attached is too big."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There is no vendor with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-delivery-partner": {
      "post": {
        "summary": "Create delivery partner",
        "tags": [
          "Create delivery partner"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the delivery partner"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "maxLength": 50
            },
            "description": "The email address of the delivery partner"
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 20
            },
            "description": "The phone number of the delivery partner"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "default": "inactive",
              "enum": [
                "active",
                "inactive"
              ],
              "example": "inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New delivery partner created."
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-delivery-partner": {
      "post": {
        "summary": "Edit delivery partner",
        "tags": [
          "Edit delivery partner"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the delivery partner to edit"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "description": "The name of the delivery partner"
          },
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "maxLength": 50
            },
            "description": "The email address of the delivery partner"
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 20
            },
            "description": "The phone number of the delivery partner"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "default": "inactive",
              "enum": [
                "active",
                "inactive"
              ],
              "example": "inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Delivery partner edited."
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to edit this vendor."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "There is no delivery partner with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product": {
      "post": {
        "summary": "Edit product",
        "tags": [
          "Edit product"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "basePrice",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isFeatured",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with that ID!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product": {
      "post": {
        "summary": "Create product",
        "tags": [
          "Create product"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "basePrice",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "image",
            "required": false,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isFeatured",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "vendor",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "No file was attached."
                    },
                    {
                      "type": "string",
                      "description": "The file is too big."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product-option": {
      "post": {
        "summary": "Create product option",
        "tags": [
          "Create product option"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product-option": {
      "post": {
        "summary": "Edit product option",
        "tags": [
          "Edit product option"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-product-option-value": {
      "post": {
        "summary": "Create product option value",
        "tags": [
          "Create product option value"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "productOption",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "example": {},
                      "type": "object",
                      "properties": {},
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "You are not authorised to create product option values for this product option."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-product-option-value": {
      "post": {
        "summary": "Edit product option value",
        "tags": [
          "Edit product option value"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/update-product-status": {
      "post": {
        "summary": "Update product statuses",
        "tags": [
          "Update product statuses"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "productIds",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "isAvailable",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-discount": {
      "post": {
        "summary": "Create discount",
        "tags": [
          "Create discount"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "percentage",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 100,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "expiryDateTime",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "maxUses",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-discount": {
      "post": {
        "summary": "Edit discount",
        "tags": [
          "Edit discount"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "percentage",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 100,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "expiryDateTime",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "maxUses",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "isEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-update-openinghours": {
      "post": {
        "summary": "Update Fulfilment Method",
        "tags": [
          "Update Fulfilment Method"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "openingHours",
            "required": true,
            "schema": {},
            "description": "The opening hours to be added to the vendor"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the fulfilment method"
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "A positive or negative integer representing the amount of pence to adjust the base price by."
          },
          {
            "in": "query",
            "name": "slotLength",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 1440,
              "minimum": 30
            },
            "description": "Slot length in minutes"
          },
          {
            "in": "query",
            "name": "bufferLength",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "minimum": 0
            },
            "description": "The required buffer time before booking a slot."
          },
          {
            "in": "query",
            "name": "orderCutoff",
            "required": false,
            "schema": {},
            "description": "The time after which no new bookings can be made."
          },
          {
            "in": "query",
            "name": "maxOrders",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The maximum number of orders allowed per slot."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/update-fulfilment-method": {
      "post": {
        "summary": "Update Fulfilment Method",
        "tags": [
          "Update Fulfilment Method"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "openingHours",
            "required": true,
            "schema": {},
            "description": "The opening hours to be added to the vendor"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the fulfilment method"
          },
          {
            "in": "query",
            "name": "priceModifier",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "A positive or negative integer representing the amount of pence to adjust the base price by."
          },
          {
            "in": "query",
            "name": "slotLength",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "maximum": 1440,
              "minimum": 30
            },
            "description": "Slot length in minutes"
          },
          {
            "in": "query",
            "name": "bufferLength",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "minimum": 0
            },
            "description": "The required buffer time before booking a slot."
          },
          {
            "in": "query",
            "name": "orderCutoff",
            "required": false,
            "schema": {},
            "description": "The time after which no new bookings can be made."
          },
          {
            "in": "query",
            "name": "maxOrders",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The maximum number of orders allowed per slot."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {},
                  "type": "object",
                  "properties": {},
                  "description": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/approve-or-decline-order": {
      "post": {
        "summary": "Approve or decline order",
        "tags": [
          "Approve or decline order"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Public ID for the order."
          },
          {
            "in": "query",
            "name": "restaurantAccepted",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/create-postal-district": {
      "post": {
        "summary": "Create postal district",
        "tags": [
          "Create postal district"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "outcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-postal-district": {
      "post": {
        "summary": "Edit postal district",
        "tags": [
          "Edit postal district"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "outcode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/admin/edit-vendor-postal-districts": {
      "post": {
        "summary": "Edit vendor postal districts",
        "tags": [
          "Edit vendor postal districts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "districts",
            "required": true,
            "schema": {},
            "description": "The districts to be added to the vendor"
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The id of the vendor to be edited"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/products/get-product-options/{productId}": {
      "get": {
        "summary": "Get product options",
        "description": "Get the options for the product as well as the relevant options.",
        "tags": [
          "Get product options"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "The ID of the product that we want the options for."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/discounts/check-discount-code/{discountCode}": {
      "get": {
        "summary": "Check discount code",
        "description": "Checks the validity of the discount code and, if valid, returns the details.",
        "tags": [
          "Check discount code"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discountCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/vendors/{vendorid}": {
      "get": {
        "summary": "View vendor menu [DEPRECATED]",
        "description": "Display \"Vendor menu\" page.",
        "tags": [
          "View vendor menu [DEPRECATED]"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorid",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/vendors/{vendorid}": {
      "get": {
        "summary": "View edit vendor",
        "description": "Display \"Edit vendor\" page.",
        "tags": [
          "View edit vendor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vendorid",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/approve-order/{orderId}": {
      "get": {
        "summary": "View approve order",
        "description": "Display \"Approve order\" page.",
        "tags": [
          "View approve order"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The order to be approved or rejected."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/delivery-partners/{deliveryPartnerId}": {
      "get": {
        "summary": "View edit delivery partner",
        "description": "Display \"Edit delivery partner\" page.",
        "tags": [
          "View edit delivery partner"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deliveryPartnerId",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Success"
                    },
                    {
                      "type": "string",
                      "description": "Success"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}