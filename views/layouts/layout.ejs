<!DOCTYPE html>
<html>
  <head>
    <title>vegi - Business</title>
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <%/* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <meta name="robots" content="noindex">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <script src="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.js"></script>
    <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.css" />
    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
    <!-- !Firebase CDN START that we look to move to modular when we can -->
    <script src="https://www.gstatic.com/firebasejs/9.1.3/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.1.3/firebase-auth-compat.js"></script>
    <!-- <script type="module"> -->
    <script type="text/javascript">
      // Import the functions you need from the SDKs you need
      // import { initializeApp } from "https://www.gstatic.com/firebasejs/9.9.3/firebase-app.js";
      import { initializeApp } from "https://www.gstatic.com/firebasejs/9.1.3/firebase-app.js";
      // TODO: Add SDKs for Firebase products that you want to use
      // https://firebase.google.com/docs/web/setup#available-libraries

      // Your web app's Firebase configuration
      const firebaseConfig = {
          apiKey: "AIzaSyB9hAjm49_3linYAcDkkEYijBiCoObXYfk", //! apiKey is fine: See: https://firebase.google.com/docs/projects/api-keys
          authDomain: "vegiliverpool.firebaseapp.com",
          projectId: "vegiliverpool",
          storageBucket: "vegiliverpool.appspot.com",
          messagingSenderId: "526129377",
          appId: "1:526129377:web:a0e4d54396cbdebe70bfa0",
          measurementId: "G-YZCWVWRNKN"
        };

      // Initialize Firebase
      const app = initializeApp(firebaseConfig);
      console.log('firebase app initialised');
    </script>
    <script src="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.js"></script>
    <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.css" />
    <script type="text/javascript">
      // FirebaseUI config.
      var uiConfig = {
          signInSuccessUrl: '/admin',
          signInOptions: [
            // Leave the lines as is for the providers you want to offer your users.
            // firebase.auth.GoogleAuthProvider.PROVIDER_ID,
            // firebase.auth.FacebookAuthProvider.PROVIDER_ID,
            // firebase.auth.TwitterAuthProvider.PROVIDER_ID,
            // firebase.auth.GithubAuthProvider.PROVIDER_ID,
            // firebase.auth.EmailAuthProvider.PROVIDER_ID,
            // eslint-disable-next-line no-undef
            firebase.auth.PhoneAuthProvider.PROVIDER_ID,
            // firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID
          ],
          // tosUrl and privacyPolicyUrl accept either url string or a callback
          // function.
          // Terms of service url/callback.
          tosUrl: 'https://vegiapp.co.uk/privacy',
          // Privacy policy url/callback.
          privacyPolicyUrl: function () {
            window.location.assign('https://vegiapp.co.uk/privacy');
          },
          recaptchaParameters: {
            type: 'image', // 'audio'
            size: 'normal', // 'invisible' or 'compact'
            badge: 'bottomleft' //' bottomright' or 'inline' applies to invisible.
          },
          defaultCountry: 'GB', // Set default country to the United Kingdom (+44).
          // For prefilling the national number, set defaultNationNumber.
          // This will only be observed if only phone Auth provider is used since
          // for multiple providers, the NASCAR screen will always render first
          // with a 'sign in with phone number' button.
          defaultNationalNumber: '1234567890',
          // You can also pass the full phone number string instead of the
          // 'defaultCountry' and 'defaultNationalNumber'. However, in this case,
          // the first country ID that matches the country code will be used to
          // populate the country selector. So for countries that share the same
          // country code, the selected country may not be the expected one.
          // In that case, pass the 'defaultCountry' instead to ensure the exact
          // country is selected. The 'defaultCountry' and 'defaultNationaNumber'
          // will always have higher priority than 'loginHint' which will be ignored
          // in their favor. In this case, the default country will be 'GB' even
          // though 'loginHint' specified the country code as '+1'.
          loginHint: '+11234567890',
          // You can provide a 'whitelistedCountries' or 'blacklistedCountries' for
          // countries to select. It takes an array of either ISO (alpha-2) or
          // E164 (prefix with '+') formatted country codes. If 'defaultCountry' is
          // not whitelisted or is blacklisted, the default country will be set to
          // the first country available (alphabetical order). Notice that
          // 'whitelistedCountries' and 'blacklistedCountries' cannot be specified
          // at the same time.
          whitelistedCountries: ['US', '+44']
        };

        // Initialize the FirebaseUI Widget using Firebase.
        // eslint-disable-next-line no-undef
        var ui = new firebaseui.auth.AuthUI(firebase.auth());
        // The start method will wait until the DOM is loaded.
        console.log('calling firebaseui start...');
        ui.start('#firebaseui-auth-container', uiConfig);
        console.log('firebaseui started');
    </script>
    <!-- Firebase CDN END -->
    <!-- !Firebase Track Auth State START - Again look to move -->
    <script type="text/javascript">
      // initApp = function () {
      //   firebase.auth().onAuthStateChanged(function (user) {
      //     if (user) {
      //       // User is signed in.
      //       var displayName = user.displayName;
      //       var email = user.email;
      //       var emailVerified = user.emailVerified;
      //       var photoURL = user.photoURL;
      //       var uid = user.uid;
      //       var phoneNumber = user.phoneNumber;
      //       var providerData = user.providerData;
      //       user.getIdToken().then(function (accessToken) {
      //         // document.getElementById('sign-in-status').textContent = 'Signed in'; //TODO: Add these tags to an account section
      //         // document.getElementById('sign-in').textContent = 'Sign out';
      //         // document.getElementById('account-details').textContent = JSON.stringify({
      //         //   displayName: displayName,
      //         //   email: email,
      //         //   emailVerified: emailVerified,
      //         //   phoneNumber: phoneNumber,
      //         //   photoURL: photoURL,
      //         //   uid: uid,
      //         //   accessToken: accessToken,
      //         //   providerData: providerData
      //         // }, null, '  ');
      //       });
      //     } else {
      //       // User is signed out.
      //       // document.getElementById('sign-in-status').textContent = 'Signed out';
      //       // document.getElementById('sign-in').textContent = 'Sign in';
      //       // document.getElementById('account-details').textContent = 'null';
      //     }
      //   }, function (error) {
      //     console.log(error);
      //   });
      // };

      // window.addEventListener('load', function () {
      //   initApp()
      // });
    </script>
    <!-- Firebase Track Auth State ENX -->
  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <!--TEMPLATES END-->


    <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!-- Matomo -->
    <script type="text/javascript">
      var _paq = window._paq = window._paq || [];
      /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
      const queryString = window.location.search;
      const params = new URLSearchParams(queryString);
      const walletAddress = params.get('wallet');

      if(walletAddress){
        _paq.push(['setUserId', walletAddress]);
      }

      _paq.push(['trackPageView']);
      _paq.push(['enableLinkTracking']);
      (function() {
        var u="https://analytics.itsaboutpeepl.com/";
        _paq.push(['setTrackerUrl', u+'matomo.php']);
        _paq.push(['setSiteId', '2']);
        var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
        g.type='text/javascript'; g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
      })();
    </script>
    <!-- End Matomo Code -->

<!--SCRIPTS-->
<script src="/dependencies/sails.io.js"></script>
<script src="/js/io.socket.config.js"></script>
<script src="/dependencies/lodash.js"></script>
<script src="/dependencies/jquery.min.js"></script>
<script src="/dependencies/vue.js"></script>
<script src="/dependencies/vue-router.js"></script>
<script src="/dependencies/popper.min.js"></script>
<script src="/dependencies/bootstrap.min.js"></script>
<script src="/dependencies/portal-vue.umd.min.js"></script>
<script src="/dependencies/cloud.js"></script>
<script src="/dependencies/moment.min.js"></script>
<script src="/dependencies/parasails.js"></script>
<script src="/js/cloud.setup.js"></script>
<script src="/js/components/ajax-button.component.js"></script>
<script src="/js/components/ajax-form.component.js"></script>
<script src="/js/components/create-vendor.component.js"></script>
<script src="/js/components/edit-discount.component.js"></script>
<script src="/js/components/edit-postal-district.component.js"></script>
<script src="/js/components/edit-product-option-value.component.js"></script>
<script src="/js/components/edit-product-option.component.js"></script>
<script src="/js/components/edit-product.component.js"></script>
<script src="/js/components/modal.component.js"></script>
<script src="/js/components/opening-hours.component.js"></script>
<script src="/js/pages/admin/account.page.js"></script>
<script src="/js/pages/admin/approve-order.page.js"></script>
<script src="/js/pages/admin/discount-codes.page.js"></script>
<script src="/js/pages/admin/edit-vendor.page.js"></script>
<script src="/js/pages/admin/login.page.js"></script>
<script src="/js/pages/admin/postal-districts.page.js"></script>
<script src="/js/pages/admin/vendors.page.js"></script>
<script src="/js/pages/couriers/approve-delivery-availability.page.js"></script>
<script src="/js/pages/couriers/deliveries.page.js"></script>
<script src="/js/pages/orders/all-orders.page.js"></script>
<script src="/js/pages/orders/my-orders.page.js"></script>
<script src="/js/pages/orders/order-confirmation.page.js"></script>
<script src="/js/pages/vendors/all-vendors.page.js"></script>
<!--SCRIPTS END-->
  </body>
</html>
